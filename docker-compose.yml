services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
       # Monter uniquement le code source pour éviter les conflits avec node_modules
      - .:/app:delegated
      # Assurez-vous que node_modules est géré directement dans le conteneur
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - PG_URL=${PG_URL}
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    container_name: postgres_ocoffee
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/ocoffee-dataset.sql:/docker-entrypoint-initdb.d/ocoffee-dataset.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: {}

